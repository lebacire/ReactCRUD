{"version":3,"sources":["Maintenance/UserMaintenance/UserMaintenance.js","CalendarDashboard/CalendarDashboard.js","Layout/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["EditableContext","React","createContext","EditableFormRow","Form","create","form","props","index","Provider","value","EditableCell","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","Item","style","margin","getFieldDecorator","rules","required","message","initialValue","ref","node","onPressEnter","onBlur","className","paddingRight","onClick","this","editable","restProps","Consumer","Component","userMaintenance","handleDelete","key","dataSource","filter","item","handleAdd","count","newData","name","age","address","row","findIndex","splice","columns","width","render","text","length","onConfirm","components","body","cell","map","col","onCell","type","marginBottom","rowClassName","bordered","dateCellRender","listData","date","content","getListData","status","monthCellRender","num","month","getMonthData","onSelect","console","log","calendarDashboard","Sider","Layout","SubMenu","Menu","sidebar","sub_menu","collapsed","trigger","collapsible","theme","mode","defaultSelectedKeys","to","Header","Content","Footer","App","toggle","year","Date","getFullYear","minHeight","Sidebar","background","padding","justify","span","fontSize","color","exact","path","component","CalendarDashboard","UserMaintenance","textAlign","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00e0c60c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  state = {\r\n    editing: false\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`\r\n            }\r\n          ],\r\n          initialValue: record[dataIndex]\r\n        })(\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass userMaintenance extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"name\",\r\n        dataIndex: \"name\",\r\n        width: \"30%\",\r\n        editable: true\r\n      },\r\n      {\r\n        title: \"age\",\r\n        dataIndex: \"age\"\r\n      },\r\n      {\r\n        title: \"address\",\r\n        dataIndex: \"address\"\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <a>Delete</a>\r\n            </Popconfirm>\r\n          ) : null\r\n      }\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: \"0\",\r\n          name: \"Edward King 0\",\r\n          age: \"32\",\r\n          address: \"London, Park Lane no. 0\"\r\n        },\r\n        {\r\n          key: \"1\",\r\n          name: \"Edward King 1\",\r\n          age: \"32\",\r\n          address: \"London, Park Lane no. 1\"\r\n        }\r\n      ],\r\n      count: 2\r\n    };\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      name: `Edward King ${count}`,\r\n      age: 32,\r\n      address: `London, Park Lane no. ${count}`\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1\r\n    });\r\n  };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          type=\"primary\"\r\n          style={{ marginBottom: 16 }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userMaintenance;","import React from \"react\";\r\n\r\nimport { Calendar, Badge } from 'antd';\r\n\r\nfunction getListData(value) {\r\n    let listData;\r\n    switch (value.date()) {\r\n      case 8:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event.' },\r\n          { type: 'success', content: 'This is usual event.' },\r\n        ];\r\n        break;\r\n      case 10:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event.' },\r\n          { type: 'success', content: 'This is usual event.' },\r\n          { type: 'error', content: 'This is error event.' },\r\n        ];\r\n        break;\r\n      case 15:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event' },\r\n          { type: 'success', content: 'This is very long usual event。。....' },\r\n          { type: 'error', content: 'This is error event 1.' },\r\n          { type: 'error', content: 'This is error event 2.' },\r\n          { type: 'error', content: 'This is error event 3.' },\r\n          { type: 'error', content: 'This is error event 4.' },\r\n        ];\r\n        break;\r\n      default:\r\n    }\r\n    return listData || [];\r\n  }\r\n\r\n  function dateCellRender(value) {\r\n    const listData = getListData(value);\r\n    return (\r\n      <ul className=\"events\">\r\n        {listData.map(item => (\r\n          <li key={item.content}>\r\n            <Badge status={item.type} text={item.content} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  function getMonthData(value) {\r\n    if (value.month() === 8) {\r\n      return 1394;\r\n    }\r\n  }\r\n\r\n  function monthCellRender(value) {\r\n    const num = getMonthData(value);\r\n    return num ? (\r\n      <div className=\"notes-month\">\r\n        <section>{num}</section>\r\n        <span>Backlog number</span>\r\n      </div>\r\n    ) : null;\r\n  }\r\n  function onSelect(value) {\r\n    console.log(value);\r\n  }\r\n  const calendarDashboard = () => (\r\n    <Calendar\r\n        dateCellRender={dateCellRender}\r\n        monthCellRender={monthCellRender}\r\n        onSelect={onSelect}\r\n    />\r\n  )\r\n\r\n  export default calendarDashboard;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Icon } from \"antd\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst sidebar = props => {\r\n  console.log(props);\r\n  let sub_menu = \"\";\r\n  if(!props.collapsed)\r\n    sub_menu = \"Maintenace\";\r\n  return (\r\n    <Sider trigger={null} collapsible collapsed={props.collapsed}>\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n        <Menu.Item key=\"1\">\r\n          <Icon type=\"calendar\" />\r\n          <span>Calendar</span>\r\n          <Link to=\"/calendar\"></Link>\r\n        </Menu.Item>\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"tool\" />\r\n              {sub_menu}\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"3\">\r\n            {\" \"}\r\n            <Icon type=\"mail\" />\r\n            <span>Email Recipient</span>\r\n            <Link to=\"/user\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\">\r\n            {\" \"}\r\n            <Icon type=\"phone\" />\r\n            <span>Alloted for Callback</span>\r\n            <Link to=\"/user\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            {\" \"}\r\n            <Icon type=\"user\" />\r\n            <span>User Account</span>\r\n            <Link to=\"/user\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"5\">\r\n            {\" \"}\r\n            <Icon type=\"usergroup-add\" />\r\n            <span>Group Lead</span>\r\n            <Link to=\"/user\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"6\">\r\n            {\" \"}\r\n            <Icon type=\"issues-close\" />\r\n            <span>CRM Case</span>\r\n            <Link to=\"/user\"></Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <Menu.Item key=\"7\">\r\n          {\" \"}\r\n          <Icon type=\"export\" />\r\n          <span>Report Generation</span>\r\n          <Link to=\"/user\"></Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\nexport default sidebar;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout, Breadcrumb, Icon, Row, Col } from \"antd\";\r\nimport UserMaintenance from \"./Maintenance/UserMaintenance/UserMaintenance\";\r\nimport CalendarDashboard from \"./CalendarDashboard/CalendarDashboard\";\r\n// import CalendarDashboard from \"./CalendarDashboard\";\r\nimport Sidebar from \"./Layout/Sidebar\";\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n  render() {\r\n    let year = new Date().getFullYear();\r\n    return (\r\n      <Router>\r\n        <Layout style={{ minHeight: \"100vh\" }}>\r\n          <Sidebar collapsed={this.state.collapsed} />\r\n          <Layout>\r\n            <Header style={{ background: \"#fff\", padding: 0 }}>\r\n              <Row type=\"flex\" justify=\"end\">\r\n                <Col span={6}>\r\n                  <Icon\r\n                    className=\"trigger\"\r\n                    type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\r\n                    onClick={this.toggle}\r\n                  />\r\n                </Col>\r\n                <Col span={6}></Col>\r\n                <Col span={3}></Col>\r\n                <Col span={2}></Col>\r\n                <Col span={6}><span style={{ fontSize: '14px', color: '#001529' }}>Abel Eric A. Go | 702 - APPLICATION_DEV</span></Col>\r\n                <Col span={1}>\r\n                  <Icon type=\"logout\" style={{ fontSize: '20px', color: '#001529' }} theme=\"outlined\"/>\r\n                </Col>\r\n\r\n              </Row>\r\n            </Header>\r\n            <Breadcrumb style={{ margin: \"16px 0px 0px 16px\" }}>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Belkin Tracker</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Content\r\n              style={{\r\n                margin: \"24px 16px\",\r\n                padding: 24,\r\n                background: \"#fff\"\r\n              }}\r\n            >\r\n              <Switch>\r\n                <Route exact path=\"/\" component={CalendarDashboard} />\r\n                <Route path=\"/calendar\" component={CalendarDashboard} />\r\n                <Route path=\"/user\" component={UserMaintenance} />\r\n              </Switch>\r\n            </Content>\r\n            <Footer style={{ textAlign: \"center\", padding: \"12px 25px\"}}>\r\n              <span style={{ fontSize: '14px', color: '#001529' }}>Call Back Tracker ©{year}</span>\r\n            </Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}